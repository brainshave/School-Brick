/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BrickFrame.java
 *
 * Created on 2010-01-16, 18:48:09
 */

package brick.gui;

import brick.image.TransformsChangeNotifyer;
import brick.math.Brick;
import brick.math.Lamp;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Szymon
 */
public class BrickFrame extends javax.swing.JFrame {

    /** Creates new form BrickFrame */
    public BrickFrame() {
        initComponents();
		brick.setLamp(lamp);
		lamp.setFrame(this);
    }
	
	public void recalc() {
		lamp.recalc();
		brick.recalc();
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        screenDistanceScrollBar = new javax.swing.JScrollBar();
        objectDictanceScrollBar = new javax.swing.JScrollBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BrickTabs = new javax.swing.JTabbedPane();
        xBrickScrollersPanel = new brick.gui.ScrollersPanel();
        yBrickScrollersPanel = new brick.gui.ScrollersPanel();
        zBrickScrollersPanel = new brick.gui.ScrollersPanel();
        renderPanel = new brick.gui.RenderPanel();
        jPanel2 = new javax.swing.JPanel();
        LampTabs = new javax.swing.JTabbedPane();
        xLampScrollersPanel = new brick.gui.ScrollersPanel();
        yLampScrollersPanel = new brick.gui.ScrollersPanel();
        zLampScrollersPanel = new brick.gui.ScrollersPanel();
        jPanel3 = new javax.swing.JPanel();
        kdSpinner = new javax.swing.JSpinner();
        ksSpinner = new javax.swing.JSpinner();
        d0Spiinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        shaderComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SW-Brick");
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        screenDistanceScrollBar.setMaximum(1000);
        screenDistanceScrollBar.setMinimum(1);
        screenDistanceScrollBar.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        screenDistanceScrollBar.setUnitIncrement(10);
        screenDistanceScrollBar.setValue(300);
        screenDistanceScrollBar.setVisibleAmount(1);
        screenDistanceScrollBar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                viewChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        jPanel1.add(screenDistanceScrollBar, gridBagConstraints);

        objectDictanceScrollBar.setMaximum(1000);
        objectDictanceScrollBar.setMinimum(1);
        objectDictanceScrollBar.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        objectDictanceScrollBar.setUnitIncrement(10);
        objectDictanceScrollBar.setValue(300);
        objectDictanceScrollBar.setVisibleAmount(1);
        objectDictanceScrollBar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                viewChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        jPanel1.add(objectDictanceScrollBar, gridBagConstraints);

        jLabel1.setText("Odległość matówki:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Odległość obiektu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        jPanel1.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        BrickTabs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kostka", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        xBrickScrollersPanel.setAxis(TransformsChangeNotifyer.X);
        xBrickScrollersPanel.setFrame(this);
        xBrickScrollersPanel.setRenderPanel(renderPanel);
        xBrickScrollersPanel.setTitle("X");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${brick}"), xBrickScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        BrickTabs.addTab(xBrickScrollersPanel.getTitle(), xBrickScrollersPanel);

        yBrickScrollersPanel.setAxis(TransformsChangeNotifyer.Y);
        yBrickScrollersPanel.setFrame(this);
        yBrickScrollersPanel.setRenderPanel(renderPanel);
        yBrickScrollersPanel.setTitle("Y");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${brick}"), yBrickScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        BrickTabs.addTab(yBrickScrollersPanel.getTitle(), yBrickScrollersPanel);

        zBrickScrollersPanel.setAxis(TransformsChangeNotifyer.Z);
        zBrickScrollersPanel.setFrame(this);
        zBrickScrollersPanel.setRenderPanel(renderPanel);
        zBrickScrollersPanel.setTitle("Z");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${brick}"), zBrickScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        BrickTabs.addTab(zBrickScrollersPanel.getTitle(), zBrickScrollersPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(BrickTabs, gridBagConstraints);

        renderPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, org.jdesktop.beansbinding.ELProperty.create("${brick}"), renderPanel, org.jdesktop.beansbinding.BeanProperty.create("brick"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp}"), renderPanel, org.jdesktop.beansbinding.BeanProperty.create("lamp"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(renderPanel, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lampa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));
        jPanel2.setLayout(new java.awt.BorderLayout());

        LampTabs.setBorder(null);

        xLampScrollersPanel.setAxis(TransformsChangeNotifyer.X);
        xLampScrollersPanel.setFrame(this);
        xLampScrollersPanel.setRenderPanel(renderPanel);
        xLampScrollersPanel.setTitle("X");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp}"), xLampScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        LampTabs.addTab("X", xLampScrollersPanel);

        yLampScrollersPanel.setAxis(TransformsChangeNotifyer.Y);
        yLampScrollersPanel.setFrame(this);
        yLampScrollersPanel.setRenderPanel(renderPanel);
        yLampScrollersPanel.setTitle("Y");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp}"), yLampScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        LampTabs.addTab("Y", yLampScrollersPanel);

        zLampScrollersPanel.setAxis(TransformsChangeNotifyer.Z);
        zLampScrollersPanel.setFrame(this);
        zLampScrollersPanel.setRenderPanel(renderPanel);
        zLampScrollersPanel.setTitle("Z");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp}"), zLampScrollersPanel, org.jdesktop.beansbinding.BeanProperty.create("abstractBrick"));
        bindingGroup.addBinding(binding);

        LampTabs.addTab("Z", zLampScrollersPanel);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        kdSpinner.setModel(new SpinnerNumberModel(0.5, 0d, 1d, 0.1d));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp.kd}"), kdSpinner, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(kdSpinner, gridBagConstraints);

        ksSpinner.setModel(new SpinnerNumberModel(0.5, 0d, 1d, 0.1d));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp.ks}"), ksSpinner, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(ksSpinner, gridBagConstraints);

        d0Spiinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), null, null, Integer.valueOf(5)));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp.d0}"), d0Spiinner, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(d0Spiinner, gridBagConstraints);

        jLabel3.setText("Kd:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Ks:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Do:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jLabel5, gridBagConstraints);

        jSpinner1.setModel(new SpinnerNumberModel(2d, 1d, Double.POSITIVE_INFINITY, 0.5));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp.m}"), jSpinner1, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jSpinner1, gridBagConstraints);

        jLabel6.setText("m:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jLabel6, gridBagConstraints);

        LampTabs.addTab("Tuning", jPanel3);

        jPanel2.add(LampTabs, java.awt.BorderLayout.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${lamp.model}"), shaderComboBox, org.jdesktop.beansbinding.BeanProperty.create("model"));
        bindingGroup.addBinding(binding);

        jPanel2.add(shaderComboBox, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.1;
        getContentPane().add(jPanel2, gridBagConstraints);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void viewChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_viewChanged
		brick.setBrickDistance(objectDictanceScrollBar.getValue());
		brick.setScreenDistance(screenDistanceScrollBar.getValue());
		//brick.recalc();
		lamp.setBrickDistance(objectDictanceScrollBar.getValue());
		lamp.setScreenDistance(screenDistanceScrollBar.getValue());
		//lamp.recalc();
		this.recalc();
		renderPanel.repaint();
	}//GEN-LAST:event_viewChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BrickFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane BrickTabs;
    private javax.swing.JTabbedPane LampTabs;
    private javax.swing.JSpinner d0Spiinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner kdSpinner;
    private javax.swing.JSpinner ksSpinner;
    private javax.swing.JScrollBar objectDictanceScrollBar;
    private brick.gui.RenderPanel renderPanel;
    private javax.swing.JScrollBar screenDistanceScrollBar;
    private javax.swing.JComboBox shaderComboBox;
    private brick.gui.ScrollersPanel xBrickScrollersPanel;
    private brick.gui.ScrollersPanel xLampScrollersPanel;
    private brick.gui.ScrollersPanel yBrickScrollersPanel;
    private brick.gui.ScrollersPanel yLampScrollersPanel;
    private brick.gui.ScrollersPanel zBrickScrollersPanel;
    private brick.gui.ScrollersPanel zLampScrollersPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

	private Brick brick = new Brick();

	public Brick getBrick() {
		return brick;
	}

	public void setBrick(Brick brick) {
		this.brick = brick;
	}

	protected Lamp lamp = new Lamp();

	public Lamp getLamp() {
		return lamp;
	}

	public void setLamp(Lamp lamp) {
		this.lamp = lamp;
	}

}
